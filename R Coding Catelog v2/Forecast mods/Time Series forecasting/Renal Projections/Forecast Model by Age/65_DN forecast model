# forecast model using tscount 
## 65+ with no Diabetes 

library(tscount)
library(tidyverse)
library(forecast)
library(fpp)

Dataset <- read.table("//internal.vic.gov.au/DHHS/HomeDirs6/ahew2812/Documents/Renal Model Data 2005-2017.csv",
   header=TRUE, sep=",", na.strings="NA", dec=".", strip.white=TRUE)


regressors_renial <- ts(c(seq(1:13)),start = 2005, frequency = 1)

--## patient > 65 with No Diabetes
Dataset %>%
filter ( Age_Brackets == "65+" & Diabetes == "N") -> Pop_65_DN

# renial dialysis t.s. 
acf(Pop_65_DN$Dialysis)
pacf(Pop_65_DN$Dialysis)

# time and transplant xcof.'s
xcof <- as.data.frame(cbind(Year=regressors_renial,Trans=Pop_65_DN$Transplants))

# diff 1 for pop 65+ with No Diabetes is stationary
acf(diff(Pop_65_DN$Dialysis))

ts_65_DN <- ts(data=Pop_65_DN$Dialysis,start = 2005, frequency = 1)

Mod_65_DN1 <- tsglm(ts=ts_65_DN, model = list(past_obs = 1,past_mean=6),
 link = c("log"),xreg = regressors_renial, distr = c("poisson")) # best mod

Mod_65_DN2 <- tsglm(ts=ts_65_DN, model = list(past_obs = 1,past_mean=4),
 link = c("log"),xreg = regressors_renial, distr = c("poisson"))


# visualise residuals
checkresiduals(Mod_65_DN1) # better mod
checkresiduals(Mod_65_DN2)
checkresiduals(Mod_65_DN3)
checkresiduals(Mod_65_DN4)


# abs sum of residuals
sum(abs(Mod_65_DN1$residuals)) # = 112.82 
sum(abs(Mod_65_DN2$residuals)) # = 149.20 
sum(abs(Mod_65_DN3$residuals)) # = 112.82 
sum(abs(Mod_65_DN4$residuals)) # = 149.20 

##-- tscount: forecast model --##

##-- testing trained model

Dataset %>%
filter ( Age_Brackets == "65+" & Diabetes == "N" & Year < 2017) -> Pop_65_DN_tr


# renial dialysis t.s. 
acf(Pop_65_DN_tr$Dialysis)
pacf(Pop_65_DN_tr$Dialysis)

# diff 1 for pop 65+ with No Diabetes is stationary
acf(diff(Pop_65_DN_tr$Dialysis))

ts_65_DN_tr <- ts(data=Pop_65_DN_tr$Dialysis,start = 2005, frequency = 1)

regressors_renial_tr <- ts(c(seq(1:12)),start = 2005, frequency = 1)

Mod_65_DN1_tr <- tsglm(ts=ts_65_DN_tr, model = list(past_obs = 1,past_mean=6),
 link = c("log"),xreg = regressors_renial_tr, distr = c("poisson"))

Mod_65_DN2_tr <- tsglm(ts=ts_65_DN_tr, model = list(past_obs = 1,past_mean=4),
 link = c("log"),xreg = regressors_renial_tr, distr = c("poisson"))

pre_mod1 <- predict(Mod_65_DN1_tr,n.ahead=1,newxreg=13)

((ts_65_DN[13] - pre_mod1$median[1])/ts_65_DN[13])*100 # error = -1.42% 

# training dataset point ests and intervals
pred_data <- as.data.frame(cbind(pre_mod1 $median,pre_mod1 $interval))


pre_mod2 <- predict(Mod_65_DN2_tr,n.ahead=1,newxreg=13)

((ts_65_DN[13] - pre_mod2$median[1])/ts_65_DN[13])*100 # error = -2.74% 


##-- Comparison models: Stocastic and Deterministic mods --##


trend <- seq_along(ts_65_DN_tr) # number of years in t.s.  
(fit1 <- auto.arima(ts_65_DN_tr, d=0, xreg=trend )) # fit deterministic lin mod

(fit2 <- auto.arima(ts_65_DN, d=1)) # fit stoc. mod

# visualise residuals
checkresiduals(fit1 ) 
checkresiduals(fit2 )

# forecast 10 steps ahead
mod3 <- forecast(fit1 ,xreg = cbind(trend = length(trend ) + 1:10))

mod4 <- forecast(fit2 , h=10)

((ts_65_DN[13] - mod3$mean[1])/ts_65_DN[13])*100 # error = -2.58% 
((ts_65_DN[13] - mod4$mean[1])/ts_65_DN[13])*100 # error = -2.31% 


##-- Forecast Next 10 years using best mod --##

# trend (years)
xcof <- as.data.frame(cbind(Year=regressors_renial))

# best mod
Mod_65_DN1 <- tsglm(ts=ts_65_DN, model = list(past_obs = 1,past_mean=6),
 link = c("log"),xreg = regressors_renial, distr = c("poisson"))

# 13 years into the future
nxcof <- as.data.frame(cbind(Year=14:23))


# best mod 10 year dialysis prediction 
pred_mod1 <- predict(Mod_65_DN1,n.ahead=10,newxreg=nxcof )

# point ests and intervals
pred_data <- cbind(pred_mod1$median,pred_mod1$interval)

