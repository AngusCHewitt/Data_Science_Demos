# forecast model using tscount 
## projection Kids and Totals renal patients

library(tscount)
library(tidyverse)
library(forecast)
library(fpp)

Dataset <- read.table("//internal.vic.gov.au/DHHS/HomeDirs6/ahew2812/Documents/Dialysis Kids and totals 2005-2017.csv",
   header=TRUE, sep=",", na.strings="NA", dec=".", strip.white=TRUE)

str(Dataset)

# renial dialysis t.s. 
acf(Dataset$Dialysis_0_14)
pacf(Dataset$Dialysis_0_14)

# diff 1 for pop 65+ with No Diabetes is stationary
acf(diff(Dataset$Dialysis_0_14))

# trend line
regressors_renial <- ts(c(seq(1:13)),start = 2005, frequency = 1)

Mod_kids1 <- tsglm(ts=Dataset$Dialysis_0_14 , model = list(past_obs = c(6,8),past_mean=4),
 link = c("log"),xreg = regressors_renial, distr = c("poisson")) 

Mod_kids2 <- tsglm(ts=Dataset$Dialysis_0_14 , model = list(past_obs = c(6,8),past_mean=13),
 link = c("log"),xreg = regressors_renial, distr = c("poisson"))

Mod_kids3 <- tsglm(ts=Dataset$Dialysis_0_14 , model = list(past_obs = c(6,8),past_mean=8),
 link = c("log"),xreg =  regressors_renial, distr = c("poisson"))

Mod_kids4 <- tsglm(ts=Dataset$Dialysis_0_14 , model = list(past_obs =c(3,6),past_mean=6),
 link = c("log"),xreg =  regressors_renial, distr = c("poisson"))# best mod

# review tscount "poisson" model adeqancy
pit(Mod_kids4, ylim = c(0, 10), main = "PIT Poisson")

# visualise residuals
checkresiduals(Mod_kids1) 
checkresiduals(Mod_kids2)
checkresiduals(Mod_kids3)
checkresiduals(Mod_kids4)# best mod

# abs sum of residuals
sum(abs(Mod_kids1$residuals)) 
sum(abs(Mod_kids2$residuals)) 
sum(abs(Mod_kids3$residuals)) 
sum(abs(Mod_kids4$residuals))# = 14.86 

#-- tscount: forecast model --##

##-- testing trained model

# create training subset
sub_kids <- as.data.frame(cbind(kids=Dataset$Dialysis_0_14[1:12]))


# renial dialysis t.s. 
acf(sub_kids$kids)
pacf(sub_kids$kids)

# diff 1 for pop 65+ with No Diabetes is stationary
acf(diff(sub_kids$kids))

ts_15_64_DY_tr <- ts(data=sub_kids$kids,start = 2005, frequency = 1)

regressors_renial_tr <- ts(c(seq(1:12)),start = 2005, frequency = 1)


Mod_kids4_tr <- tsglm(ts=ts_15_64_DY_tr , model = list(past_obs =c(3,6),past_mean=6),
 link = c("log"),xreg =  regressors_renial_tr, distr = c("poisson"))# best mod


# visualise residuals
checkresiduals(Mod_kids4_tr) # better mod


pre_mod1 <- predict(Mod_kids4_tr,n.ahead=1,newxreg=13)

# point ests and intervals
train_data <- cbind(pre_mod1$median,pre_mod1$interval)

(Dataset$Dialysis_0_14 [13] - pre_mod1$median[1] # count error = 1 # *--best mod--*

##-- Forecast Next 10 years using best mod --##


# best mod
Mod_kids4 <- tsglm(ts=Dataset$Dialysis_0_14 , model = list(past_obs =c(3,6),past_mean=6),
 link = c("log"),xreg =  regressors_renial, distr = c("poisson"))# best mod

# 13 years into the future
nxcof <- as.data.frame(cbind(Year=14:23))

# best mod 10 year dialysis prediction 
pred_mod1 <- predict(Mod_kids4 ,n.ahead=10,newxreg=nxcof )

# point ests and intervals
pred_data <- as.data.frame(cbind(Forecast=pred_mod1$median,pred_mod1$interval))

#-- total renal --#

# training dataset - review first step errors
Dataset %>%
filter ( Values < 2017) -> Pop_total_tr

# renial dialysis t.s. 
acf(Pop_total_tr$Total_Dialysis)
pacf(Pop_total_tr$Total_Dialysis)

# diff 1 for pop 65+ with No Diabetes is stationary
acf(diff(Pop_total_tr$Total_Dialysis))

# trend line
regressors_renial_tr <- ts(c(seq(1:12)),start = 2005, frequency = 1)

trend <- seq_along(Pop_total_tr$Total_Dialysis) # number of years in t.s.  
(fit1 <- auto.arima(Pop_total_tr$Total_Dialysis, d=0, xreg=trend )) # fit deterministic lin mod

(fit2 <- auto.arima(Pop_total_tr$Total_Dialysis, d=1)) # fit stoc. mod

# visualise residuals
checkresiduals(fit1 ) 
checkresiduals(fit2 )

# forecast 10 steps ahead # poisson mod residuals are much more stationary
mod3 <- forecast(fit1 ,xreg = cbind(trend = length(trend ) + 1:10))

mod4 <- forecast(fit2 , h=10)

((Dataset $Total_Dialysis[13] - mod3$mean[1])/Dataset $Total_Dialysis[13])*100 # error = -2.00% 
((Dataset $Total_Dialysis[13] - mod4$mean[1])/Dataset $Total_Dialysis[13])*100 # error = -0.52% # better mod


##-- Forecast Next 10 years using best mod --##


# best mod - stocastic mod
(fit2 <- auto.arima(Dataset $Total_Dialysis, d=1)) # fit stoc. mod
 
mod4 <- forecast(fit2 , h=10)

# point ests and intervals
pred_data <- cbind(pred_mod1$median,pred_mod1$interval)




