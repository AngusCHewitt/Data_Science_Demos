{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 .AppleSystemUIFontMonospaced-Regular;\f1\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;\red83\green92\blue101;\red244\green244\blue244;\red35\green38\blue42;
\red69\green105\blue13;\red166\green63\blue5;\red26\green28\blue31;\red255\green255\blue255;\red220\green224\blue226;
}
{\*\expandedcolortbl;;\cssrgb\c40000\c43529\c47059;\cssrgb\c96471\c96471\c96471;\cssrgb\c18431\c20000\c21569;
\cssrgb\c33725\c47843\c5098;\cssrgb\c71765\c32549\c392;\cssrgb\c13725\c14902\c16078;\cssrgb\c100000\c100000\c100000;\cssrgb\c89020\c90196\c90980;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs26 \cf2 \cb3 \expnd0\expndtw0\kerning0
# library the package for polr function\cf4 \
library(\cf5 "MASS"\cf4 )\
\
\cf2 # a sample size of 30\cf4 \
n <- 30\
\
\cf2 # generating a factor with smple size n and with a frequency for each level of n/3\cf4 \
Class <- factor(\cf6 rep\cf4 (\cf6 c\cf4 (\cf5 "HIGH"\cf4 , \cf5 "LOW"\cf4 , \cf5 "MEDIUM"\cf4 ), each= n/\cf6 3\cf4 ))\
\
\cf2 # leaving it an unordered factor by using # (code not run)\cf4 \
\cf2 # Class <- ordered(Class, levels= c("LOW", "MEDIUM", "HIGH")) \cf4 \
\
\cf2 # generating a data frame with two random variables\cf4 \
set.seed(\cf6 1\cf4 )\
training <- data.frame(matrix(rnorm(\cf6 2\cf4 *n), ncol=\cf6 2\cf4 ))\
\
\cf2 # adding the dependent variable Class to te data frame\cf4 \
training$Class <- Class\
\
\cf2 # running model\cf4 \
m <- polr(Class~., data= training, Hess = \cf6 TRUE\cf4 )\
\
\cf2 # look at coefficients and tests\cf4 \
library(\cf5 "AER"\cf4 ) \
coeftest(m) \
\
\
##\'97 using clmm to model ordinal response var \
\pard\pardeftab720\sa330\partightenfactor0

\f1\fs30 \cf7 \cb8 You might try the 
\f0\fs26 \cb9 ordinal
\f1\fs30 \cb8  packages 
\f0\fs26 \cb9 clmm
\f1\fs30 \cb8  function:\cb1 \
\pard\pardeftab720\partightenfactor0

\f0\fs26 \cf4 \cb3  fmm1 <- clmm(rating ~ temp + contact + (\cf6 1\cf4 |judge), data = wine) \
\
summary(fmm1)   \
Cumulative Link Mixed Model fitted with the Laplace approximation\
\
formula: rating ~ temp + contact + (\cf6 1\cf4  | judge)\
data:    wine\
\
 link  threshold nobs logLik AIC    niter    max.grad cond.H \
 logit flexible  \cf6 72\cf4    -\cf6 81.57\cf4  \cf6 177.13\cf4  \cf6 332\cf4 (\cf6 999\cf4 ) \cf6 1.02e-05\cf4  \cf6 2.8e+01\cf4 \
\
Random effects:\
 Groups Name        Variance Std.Dev.\
 judge  (Intercept) \cf6 1.279\cf4     \cf6 1.131\cf4    \
Number of groups:  judge \cf6 9\cf4  \
\
Coefficients:\
           Estimate Std. Error z value Pr(>|z|)    \
tempwarm     \cf6 3.0630\cf4      \cf6 0.5954\cf4    \cf6 5.145\cf4  \cf6 2.68e-07\cf4  ***\
contactyes   \cf6 1.8349\cf4      \cf6 0.5125\cf4    \cf6 3.580\cf4  \cf6 0.000344\cf4  ***\
---\
Signif. codes:  \cf6 0\cf4  \'91***\'92 \cf6 0.001\cf4  \'91**\'92 \cf6 0.01\cf4  \'91*\'92 \cf6 0.05\cf4  \'91.\'92 \cf6 0.1\cf4  \'91 \'92 \cf6 1\cf4 \
\
Threshold coefficients:\
    Estimate Std. Error z value\
\cf6 1\cf4 |\cf6 2\cf4   -\cf6 1.6237\cf4      \cf6 0.6824\cf4   -\cf6 2.379\cf4 \
\cf6 2\cf4 |\cf6 3\cf4    \cf6 1.5134\cf4      \cf6 0.6038\cf4    \cf6 2.507\cf4 \
\cf6 3\cf4 |\cf6 4\cf4    \cf6 4.2285\cf4      \cf6 0.8090\cf4    \cf6 5.227\cf4 \
\cf6 4\cf4 |\cf6 5\cf4    \cf6 6.0888\cf4      \cf6 0.9725\cf4    \cf6 6.261\
\
\
## survey package could have very useful funs too\
## from memory the psych package it another one }