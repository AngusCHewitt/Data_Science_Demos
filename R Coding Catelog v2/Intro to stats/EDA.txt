library(e1071)# has the skewness and kurtosis function
library(Rcmdr)#drop down interface
library(aplpack)#i.e. for the stem and leaf plots
library(qcc)#pareto.chart
	
#Horizontial Boxplot (using "x" numeric vector)
>boxplot(Water, horizontal = TRUE)
 >boxplot(Water, horizontal = TRUE,range=1.5,col = "bisque")
#boxplot from a csv file, with factor (vege) and variable = liversize. 
>Boxplot(Liver_Size~Vegetarian, data=Dataset, id.method="y")

#using the id.method="y" will identify mild to extreme outliers.
Boxplot( ~ residuals, data=Dataset, id.method="y"),

#boxplot coefficients (stats)
>boxplot.stats(rivers)$out
#this will display EO
>boxplot.stats(rivers, coef = 3)$out 

#provides a five stats summary of BP, no. observations, conf= lower and upper limit of BP, out= no.outside whiskers 	
> boxplot.stats(Water, coef = 1.5, do.conf = TRUE, do.out = TRUE)

#Barchart - use the barplot function

> barplot(table(state.region), cex.names = 0.5) #counts, cex.names shrinks the name by 50% to make the words more legible
> barplot(prop.table(table(state.region)), cex.names = 0.5) #relative frequency

#Alternative to the barchart, display categories in decending order, great way to unvail the data underlieing structure.
> library(qcc)
> pareto.chart(table(state.division), ylab = "Frequency")

Histogram; "" surpresses the main title to conserve space.

co efficient of var. 
#indicate the level of variation with the sample itself. below value eman that av rep stdev within the dataset is amount half the value of the mean.  
> sd(x)/mean(x)
[1] 0.426427


> hist(precip, main = "")
> hist(precip, freq = FALSE, main = "")

#changes the no. bins (classes)
> hist(precip, breaks = 10, main = "")
> hist(precip, breaks = 200, main = "")

#Bar chart turned on is side. dots replacing the relative frequency of each category. Great for multivariant datasets
>x <- table(state.region)
>dotchart(as.vector(x), labels = names(x))


#Stem and leaf plot, need to upload the 2nd library option. 
>stem.leaf(x)

#Quantiles, can the the sort(x) funtion to sort the vector data, p where 0 < p < 1 i.e. 0.50 will derive the sample median value.  
quantile(x, probs
= c(pn))


"G" > skewness(x)
 # rule of thumb benchmark for a data set if it is strongly (-,+) skewed => if "G" > "T" 
"T" > 2 * sqrt(6/length(x)) 

> kurtosis(x)
> 4 * sqrt(6/length(x))

# scale function can be used to stardise numeric vectors and martices.
>scale(x, center = TRUE, scale = TRUE)

# scale is generic function whose default method centers and/or scales the columns of a numeric matrix        
#EG 1  require(stats)
x <- matrix(1:10, ncol = 2)
(centered.x <- scale(x, scale = FALSE))
cov(centered.scaled.x <- scale(x)) # all 1

#Sum of squares (Xi-X)^2
>sum(scale(Knee, scale = FALSE)^2)

# EG2 scale gives the standardised var (X) mean and SD. 
> t = scale(r) 
> r
[1] -900 -100  700 1500
> t
           [,1]
[1,] -1.1618950
[2,] -0.3872983
[3,]  0.3872983
[4,]  1.1618950
attr(,"scaled:center")
[1] 300
attr(,"scaled:scale")
[1] 1032.796

# EG3 the centre in the mean of dataset and scale is sd, if both scale and centre are true data has be standardise by sd. 
attr(,"scaled:center")
[1] 9.925616
attr(,"scaled:scale")
[1] 2.000398

Note => abs -gives vector dataset absolue values.

#MAD - Compute the median absolute deviation, i.e., the (lo-/hi-) median of the absolute deviations from the median, and (by default) adjust by a factor for 
asymptotically normal consistency. 

mad(x, center = median(x), constant = 1.4826, na.rm = FALSE,
    low = FALSE, high = FALSE

Stripcharts
 stripchart(weight ~ feed, method="stack", data=chickwts)
 Bar Graphs #must be vector or matrix
 barplot(xtabs(Freq ~ Admit + Gender, data = UCBAdmissions)) # stacked bar chart
 barplot(xtabs(Freq ~ Admit, data = UCBAdmissions))
 barplot(xtabs(Freq ~ Gender + Admit, data = UCBAdmissions), legend = TRUE, beside
= TRUE) # oops, discrimination.
 barplot(xtabs(Freq ~ Admit+Dept, data = UCBAdmissions), legend = TRUE, beside =
TRUE) # dierent departments have dierent standards
 barplot(xtabs(Freq ~ Gender+Dept, data = UCBAdmissions), legend = TRUE, beside
= TRUE) # men mostly applied to easy departments, women mostly applied to dicult
departments
 barplot(xtabs(Freq ~ Gender+Dept, data = UCBAdmissions), legend = TRUE, beside
= TRUE)

#barchart need tp upload the lattice package
 barchart(Admit ~ Freq, data = C)
 barchart(Admit ~ Freq|Gender, data = C)
 barchart(Admit ~ Freq | Dept, groups = Gender, data = C)
 barchart(Admit ~ Freq | Dept, groups = Gender, data = C, auto.key = TRUE)

 Histograms
 ~ breaks | wool*tension, data = warpbreaks
 ~ weight | feed, data = chickwts
 ~ weight | group, data = PlantGrowth
 ~ count | spray, data = InsectSprays
 ~ len | dose, data = ToothGrowth
3.6. COMPARING POPULATIONS 49
 ~ decrease | treatment, data = OrchardSprays (or rowpos or colpos)

#multiple boxplots
>histogram(~age | education, data = infert)

 Scatterplots, petal width vs petal lengh different type of iris flowers. 
 xyplot(Petal.Width ~ Petal.Length, data = iris, group = Species)
> library(lattice)
> xyplot()

 Scatterplot matrices
 splom(~ cbind(GNP.deflator,GNP,Unemployed,Armed.Forces,Population,Year,Employed),
data = longley)
 splom(~ cbind(pop15,pop75,dpi), data = LifeCycleSavings)
 splom(~ cbind(Murder, Assault, Rape), data = USArrests)
 splom(~ cbind(CONT, INTG, DMNR), data = USJudgeRatings)
 splom(~ cbind(area,peri,shape,perm), data = rock)
 splom(~ cbind(Air.Flow, Water.Temp, Acid.Conc., stack.loss), data = stackloss)
 splom(~ cbind(Fertility,Agriculture,Examination,Education,Catholic,Infant.Mortality),
data = swiss)
 splom(~ cbind(Fertility,Agriculture,Examination), data = swiss) (positive and negative)

 Dot charts
 dotchart(USPersonalExpenditure)
 dotchart(t(USPersonalExpenditure))
 dotchart(WorldPhones) (transpose is no good)
 freeny.x is no good, neither is volcano
 dotchart(UCBAdmissions[„1])
 dotplot(Survived ~ Freq | Class, groups = Sex, data = B)
 dotplot(Admit ~ Freq | Dept, groups = Gender, data = C)

 Mosaic plot
 mosaic(~ Survived + Class + Age + Sex, data = Titanic) (or just mosaic(Titanic))
 mosaic(~ Admit + Dept + Gender, data = UCBAdmissions)

 Spine plots
 spineplot(xtabs(Freq ~ Admit + Gender, data = UCBAdmissions)) # rescaled barplot
Quantile-quantile plots: There are two ways to do this. One way is to compare two independent
samples (of the same size). qqplot(x,y). Another way is to compare the sample quantiles
of one variable to the theoretical quantiles of another distribution.

Lattice graphs
The following types of plots are useful when there is one variable of interest and there is a factor in
the data set by which the variable is categorized.
It is sometimes nice to set lattice.options(default.theme = "col.whitebg")
Side by side boxplots
> library(lattice)
#mulitple boxplots - barchart can also be used for comparative purposes for the below datasets.
> bwplot(~weight | feed, data = chickwts)

#A coplot of conc versus uptake by Type and Treatment in the CO2 data
>coplot(conc ~ uptake | Type * Treatment, data = CO2)

#stem.leaf plot used with the package -library(aplpack)
stem.leaf(data, unit, m, Min, Max, rule.line = c("Dixon", "Velleman", "Sturges"),
    style = c("Tukey", "bare"), trim.outliers = TRUE, depths = TRUE,
    reverse.negative.leaves = TRUE, na.rm = FALSE, printresult = TRUE)

stem.leaf.backback(x,y, unit, m, Min, Max, rule.line = c("Dixon", "Velleman", 
    "Sturges"), style = c("Tukey", "bare"), trim.outliers = TRUE, 
    depths = TRUE, reverse.negative.leaves = TRUE, na.rm = FALSE,
    printresult=TRUE, show.no.depths = FALSE, add.more.blanks = 0,
    back.to.back = TRUE)

#Check the structure of the data
> str(ExamAss)
'data.frame':   19 obs. of  2 variables:
 $ Assignment : int  30 14 35 20 35 17 40 36 29 37 ...
 $ Examination: int  39 26 45 37 43 35 52 38 40 47 ...

#Graphical display, XY scatter plot
#note the [] function being used, this telling "R" that x=first column, y=second column - convention of regression. 
 plot(ExamAss[,1],ExamAss[,2], xlab="Assignment Mark, Max=40",ylab="Exam Mark,Max=60",main="Regression analysis")

#Add a line of best fit with and written equation of the line.
> plot(ExamAss[,1],ExamAss[,2], xlab="Assignment Mark, Max=40",ylab="Exam Mark,Max=60",main="Regression analysis")+
+ abline(20,0.77) + text(15,15,paste("Exam ~ ",20,"+", round(27/35,2),"*Assignment"),pos=4,cex=1.5)
numeric(0)

