runApp()
View(meaningful_var_interactions_tab)
meaningful_var_interactions_tab
meaningful_var_interactions_tab$GameDay_Role
meaningful_var_interactions_tab$GameDay_Role["Centre_Mid"]
meaningful_var_interactions_tab$GameDay_Role[["Centre_Mid"]]
meaningful_var_interactions_tab$GameDay_Role== "Centre_Mid"
meaningful_var_interactions_tab$Career_Position[GameDay_Role == "Centre_Mid"]
meaningful_var_interactions_tab[GameDay_Role == "Centre_Mid"]
meaningful_var_interactions_tab$GameDay_Role == "Centre_Mid"
meaningful_var_interactions_tab{GameDay_Role == "Centre_Mid"}
meaningful_var_interactions_tab[GameDay_Role == "Centre_Mid"]
meaningful_var_interactions_tab$GameDay_Role[GameDay_Role == "Centre_Mid"]
meaningful_var_interactions_tab$GameDay_Role["Centre_Mid"]
meaningful_var_interactions_tab$GameDay_Role[GameDay_Role = "Centre_Mid"]
meaningful_var_interactions_tab[GameDay_Role == "Centre_Mid"]
meaningful_var_interactions_tab[[GameDay_Role == "Centre_Mid"]]
meaningful_var_interactions_tab$GameDay_Role[meaningful_var_interactions_tab$GameDay_Role == "Centre_Mid"]
meaningful_var_interactions_tab$Career_Position[meaningful_var_interactions_tab$GameDay_Role == "Centre_Mid"]
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
Half_Forward_Mod
ranef(Half_Forward_Mod)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
renderValueBo
runApp()
renderValueBox
?valueBox
runApp()
observe
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
source(file = "/Users/angushewitt/Desktop/AFL App Dev/Weekly Data Refresh Workflows/Features building & Preds dts/Load GameDay Mixed Models.R") # load gameday models
load("/Users/angushewitt/Desktop/AFL App Dev/Apps/Data/baseline_Prediction_dt.Rdata") #baselimeprd dt - AFL stats last rec game
load("/Users/angushewitt/Desktop/AFL Datasets/Misc/meaningful_var_interactions_tab.RData") # rubik cube coefs
meaningful_var_interactions_tab$Career_Position
meaningful_var_interactions_tab$Career_Position[meaningful_var_interactions_tab$GameDay_Role == "Key_Forward"]
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
##-- Server, data loading, manipulation and obj building occurs
library(tidyverse) # tidydata
library(DT) # r shiny additional funs
library(shiny) # Rshiny base package
library(shinydashboard) # Rshiny dashboard funs
library(vcd) #mosaic plots
library(plotly) # interactive plots
library(lme4) #mixed models
library(splines) #natural splines
source(file = "/Users/angushewitt/Desktop/AFL App Dev/Weekly Data Refresh Workflows/Features building & Preds dts/Load GameDay Mixed Models.R") # load gameday models
load("/Users/angushewitt/Desktop/AFL App Dev/Apps/Data/baseline_Prediction_dt.Rdata") #baselimeprd dt - AFL stats last rec game
load("/Users/angushewitt/Desktop/AFL Datasets/Misc/meaningful_var_interactions_tab.RData") # rubik cube coefs
runApp()
meaningful_var_interactions_tab
meaningful_var_interactions_tab %>%
filter(GameDay_Role == "Key_Forward")
meaningful_var_interactions_tab %>%
filter(GameDay_Role == "Key_Forward") %>%
select(Career_Position) -> meaningful_var_interactions_tab_subset
meaningful_var_interactions_tab_subset
runApp()
runApp()
runApp()
ranef(Half_Forward_Mod)
runApp()
runApp()
runApp()
runApp()
load("/Users/angushewitt/Desktop/AFL Datasets/Misc/rubik_Mod_coef.Rdata") # rubik cube coefs
rubik_Mod_coef
load("/Users/angushewitt/Desktop/AFL Datasets/Misc/meaningful_var_interactions_tab.RData") # rubik cube coefs
meaningful_var_interactions_tab
table(meaningful_var_interactions_tab$Career_Position)
meaningful_var_interactions_tab
meaningful_var_interactions_tab_subset$Career_Position[meaningful_var_interactions_tab_subset$GameDay_Role == "Key_Forward"]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
meaningful_var_interactions_tab
meaningful_var_interactions_tab %>%
ungroup() -> meaningful_var_interactions_tab
meaningful_var_interactions_tab
load("/Users/angushewitt/Desktop/AFL Datasets/Misc/rubik_Mod_coef.Rdata") # rubik cube coefs
rubik_Mod_coef
rubik_Mod_coef[[8]]$GameDay_Role
is(rubik_Mod_coef[[8]]$GameDay_Role))
is(rubik_Mod_coef[[8]]$GameDay_Role)
rubik_Mod_coef[[8]]$GameDay_Role
rubik_Mod_coef[[9]]$Career_Positions
runApp()
runApp()
meaningful_var_interactions_tab %>%
ungroup() -> meaningful_var_interactions_tab
meaningful_var_interactions_tab
"Key_Forward" %in% meaningful_var_interactions_tab$Career_Position[meaningful_var_interactions_tab$GameDay_Role == "Key_Forward"]
meaningful_var_interactions_tab$Career_Position[meaningful_var_interactions_tab$GameDay_Role == "Key_Forward"]
meaningful_var_interactions_tab$Career_Position
meaningful_var_interactions_tab$Career_Position[meaningful_var_interactions_tab$GameDay_Role == "Key_Forward"]
"Ruck" %in% meaningful_var_interactions_tab$Career_Position[meaningful_var_interactions_tab$GameDay_Role == "Key_Forward"]
baseline_Prediction_dt %>%
ungroup() %>%
filter(ID == input$Rubik_player_ID) %>%
mutate(Career_Positions_Meaningful_GD_Roles = if_else( "Ruck" %in% meaningful_var_interactions_tab$Career_Position[meaningful_var_interactions_tab$GameDay_Role == "Key_Forward"], # limited career posiition to mean car pos levels for mod>
input$Rubik_car_Pos_id, "The_Rest_Car_GD_Roles"))
load("/Users/angushewitt/Desktop/AFL App Dev/Apps/Data/baseline_Prediction_dt.Rdata") #baselimeprd dt - AFL stats last rec game
load("/Users/angushewitt/Desktop/AFL Datasets/Misc/meaningful_var_interactions_tab.RData") # rubik cube coefs
baseline_Prediction_dt %>%
ungroup() %>%
filter(ID == input$Rubik_player_ID) %>%
mutate(Career_Positions_Meaningful_GD_Roles = if_else( "Ruck" %in% meaningful_var_interactions_tab$Career_Position[meaningful_var_interactions_tab$GameDay_Role == "Key_Forward"], # limited career posiition to mean car pos levels for mod>
input$Rubik_car_Pos_id, "The_Rest_Car_GD_Roles"))
baseline_Prediction_dt %>%
ungroup() %>%
filter(ID == input$Rubik_player_ID) %>%
mutate(Career_Positions_Meaningful_GD_Roles = if_else( "Ruck" %in% meaningful_var_interactions_tab$Career_Position[meaningful_var_interactions_tab$GameDay_Role == "Key_Forward"], # limited career posiition to mean car pos levels for mod>
"Ruck", "The_Rest_Car_GD_Roles"))
baseline_Prediction_dt %>%
ungroup() %>%
filter(ID == "4040") %>%
mutate(Career_Positions_Meaningful_GD_Roles = if_else( "Ruck" %in% meaningful_var_interactions_tab$Career_Position[meaningful_var_interactions_tab$GameDay_Role == "Key_Forward"], # limited career posiition to mean car pos levels for mod>
"Ruck", "The_Rest_Car_GD_Roles"))
baseline_Prediction_dt
baseline_Prediction_dt %>%
ungroup() %>%
filter(ID == "1126") %>%
mutate(Career_Positions_Meaningful_GD_Roles = if_else( "Ruck" %in% meaningful_var_interactions_tab$Career_Position[meaningful_var_interactions_tab$GameDay_Role == "Key_Forward"], # limited career posiition to mean car pos levels for mod>
"Ruck", "The_Rest_Car_GD_Roles"))
Key_Forward_Mod
baseline_Prediction_dt %>%
ungroup() %>%
filter(ID == "1126") %>%
mutate(Career_Positions_Meaningful_GD_Roles = if_else( "Ruckman" %in% meaningful_var_interactions_tab$Career_Position[meaningful_var_interactions_tab$GameDay_Role == "Key_Forward"], # limited career posiition to mean car pos levels for mod>
"Ruck", "The_Rest_Car_GD_Roles"))
baseline_Prediction_dt %>%
ungroup() %>%
filter(ID == "1126") %>%
mutate(Career_Positions_Meaningful_GD_Roles = if_else( "Key_Forward" %in% meaningful_var_interactions_tab$Career_Position[meaningful_var_interactions_tab$GameDay_Role == "Key_Forward"], # limited career posiition to mean car pos levels for mod>
"Ruck", "The_Rest_Car_GD_Roles"))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
if
?if(
?if(
?if(
?if
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?selectInput
load("/Users/angushewitt/Desktop/AFL App Dev/Apps/Data/baseline_Prediction_dt.Rdata") #baselimeprd dt - AFL stats last rec game
load("/Users/angushewitt/Desktop/AFL Datasets/Misc/meaningful_var_interactions_tab.RData") # rubik cube coefs
baseline_Prediction_dt
baseline_Prediction_dt$Career_Positions_Meaningful_GD_Roles
runApp()
runApp()
runApp()
load("/Users/angushewitt/Desktop/AFL Datasets/Misc/meaningful_var_interactions_tab.RData") # rubik cube coefs
meaningful_var_interactions_tab
View(meaningful_var_interactions_tab)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
load("/Users/angushewitt/Desktop/AFL Datasets/Misc/meaningful_var_interactions_tab.RData") # rubik cube coefs
View(meaningful_var_interactions_tab)
meaningful_var_interactions_tab
load("/Users/angushewitt/Desktop/AFL App Dev/Apps/Data/baseline_Prediction_dt.Rdata") #baselimeprd dt - AFL stats last rec game
baseline_Prediction_dt$Career_Positions_Meaningful_GD_Roles
is(baseline_Prediction_dt$Career_Positions_Meaningful_GD_Roles)
runApp()
runApp()
runApp()
runApp()
ranef(Key_Forward_Mod)
ranef(Forward_Frwd_PT_Ruck_Mod)
meaningful_var_interactions_tab
View(meaningful_var_interactions_tab)
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
source(file = "/Users/angushewitt/Desktop/AFL App Dev/Weekly Data Refresh Workflows/Features building & Preds dts/Load GameDay Mixed Models.R") # load gameday models
runApp()
runApp()
runApp()
##-- Server, data loading, manipulation and obj building occurs
library(tidyverse) # tidydata
library(DT) # r shiny additional funs
library(shiny) # Rshiny base package
library(shinydashboard) # Rshiny dashboard funs
library(vcd) #mosaic plots
library(plotly) # interactive plots
library(lme4) #mixed models
library(splines) #natural splines
source(file = "/Users/angushewitt/Desktop/AFL App Dev/Weekly Data Refresh Workflows/Features building & Preds dts/Load GameDay Mixed Models.R") # load gameday models
load("/Users/angushewitt/Desktop/AFL App Dev/Apps/Data/baseline_Prediction_dt.Rdata") #baselimeprd dt - AFL stats last rec game
load("/Users/angushewitt/Desktop/AFL Datasets/Misc/meaningful_var_interactions_tab.RData") # rubik cube coefs
runApp()
runApp()
runApp()
?actionButton
?observeEvent
runApp()
?actionButton
shiny::runApp()
runApp()
?tableOutput("rubik_cube", "HGS_Prob_Odds")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
load("/Users/angushewitt/Desktop/AFL Datasets/Misc/meaningful_var_interactions_tab.RData") # rubik cube coefs
meaningful_var_interactions_tab
load("/Users/angushewitt/Desktop/AFL Datasets/Misc/rubik_Mod_coef.Rdata") # rubik cube coefs
rubik_Mod_coef
meaningful_var_interactions_tab_subset
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
##-- Step 4B: Cluster Vars EDA and Variable Selection
library(tidyverse) # tidy dt
library(data.table) # big data
library(lubridate) # tidy dates
library(flexmix) # mixture mods
library(readxl) # read in xlsm
library(factoextra) # clustering visualization
library(cluster) # cluster stats
library(clipr) # copy objs
##-- hist <-> mixture mode <-> sense check campuses in each cluster <-> visualise cluster components with PCA
# Volumes (); Acute esp, Elec Admissons, Intervention / Medical DRG Types, Sameday, Multi Day, WEIS Funded, Ambulabory, Sub-Acute, tot_procs
# Diag Complexity (); InLiner_Weight_level_1_cnt:InLiner_Weight_level_5_cnt
# Procedural Complexity (); MBS_level_1_cnt:MBS_level_5_cnt, tot_procs
# Emerg Response Capability (); emerg_Admissions
# Critical Care Response (); tot_ICUHRS_episodes
# Case Mix (); No_Unique_Spec (optional, add value)
##-- load campus level cluster vars
load("~/OneDrive - Department of Health and Human Services. Victoria/Nursing Ratio cluster modelling/Inpatient Mod/VAED MBS and ECCS datasets/Step_4_VAED_pu1819_1920_Campus_Level_sum.Rdata")
##-- Campuses short names and group categories
Campus_Group_and_Type_Categories <- read_excel("~/OneDrive - Department of Health and Human Services. Victoria/Ref Datasets/Campus Group and Type Categories.xlsx")
##  vaed hosptial names
load("/Users/angushewitt/OneDrive - Department of Health and Human Services. Victoria/Ref Datasets/VAED_unique_campus_combos_1819_2021.Rdata")
##  campus codes with legislated nurising ratios
Campus_Leg_ratios <- read_excel("/Users/angushewitt/OneDrive - Department of Health and Human Services. Victoria/Nursing Ratio cluster modelling/Inpatient Mod/VAED MBS and ECCS datasets/Campus Legislated Nursing Ratio Levels.xlsx")
##-- corce campus as char
Campus_Group_and_Type_Categories %>%
mutate(CAMPUS = as.character(CAMPUS)) -> Campus_Group_and_Type_Categories
Campus_Leg_ratios %>%
mutate(CAMPUS = as.character(CAMPUS)) -> Campus_Leg_ratios
##--take the latest fiscal yr as  each hsoptial sname
VAED_unique_campus_combos_1819_2021 %>%
filter(FY == "2020/21") -> VAED_unique_campus_combos_1819_2021
dim(campus_Level_cnts_VAED_1819)
#126 41
##-- left join campus groups and short names
##-0- there are duplicate vauales in the vAED campus names, nned a time elevele to dt to get unique values (by fiscal yr)
campus_Level_cnts_VAED_1819 %>%
left_join(Campus_Group_and_Type_Categories, by = "CAMPUS")%>%
left_join(VAED_unique_campus_combos_1819_2021, by = "CAMPUS") %>%
left_join(Campus_Leg_ratios, by = "CAMPUS") -> campus_Level_cnts_VAED_1819
dim(campus_Level_cnts_VAED_1819)
# 126 50
# coul be another option
"%notin%" <- Negate("%in%")
#filter put campus deemed to be outside the scope of this work, nono medical and usrgical wards
campus_Level_cnts_VAED_1819 %>%
filter(CAMPUS %notin% c("1900", "1232", "2210")) -> campus_Level_cnts_VAED_1819
##-- visual var distrn
glimpse(campus_Level_cnts_VAED_1819)
dim(campus_Level_cnts_VAED_1819)
# 123 50
load("~/OneDrive - Department of Health and Human Services. Victoria/Nursing Ratio cluster modelling/Inpatient Mod/inpatient cluster mods/Saturdated_Mod.Rdata")
campus_Level_cnts_VAED_1819 %>%
ungroup() %>%
mutate(clustering = clusters(Optimal_Mod)) -> campus_Level_cnts_VAED_1819_clust
##-- cluster vars usewd in baove mixture mod
campus_Level_cnts_VAED_1819_clust %>%
as.data.frame()  -> cluster_Vars
param <- data.frame(parameters(Optimal_Mod))
# Add the column with the type of crime
param <- param %>%
mutate(vars = colnames(VAED_var_Matrix))
# Plot the clusters with their lambdas
param %>%
gather(cluster, lambdas, -vars) %>%
ggplot(aes(x = vars, y = lambdas, fill = vars)) +
geom_bar(stat = "identity") +
facet_wrap(~ cluster) +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
legend.position = "none")
parameters(Saturdated_Mod)
campus_Level_cnts_VAED_1819_clust
campus_Level_cnts_VAED_1819 %>%
ungroup() %>%
mutate(clustering = clusters(Saturdated_Mod)) -> campus_Level_cnts_VAED_1819_clust
campus_Level_cnts_VAED_1819_clust %>%
mutate(cluster_ratio_levels = case_when(clustering == 1L ~ "Part 4",
clustering == 2L ~ "Part 1",
clustering == 3L ~ "Part 3",
clustering == 4L ~ "Part 2")) %>%
select(cluster_ratio_levels, Nursing_Ratio_levels) %>%
table()
campus_Level_cnts_VAED_1819_clust %>%
mutate(cluster_ratio_levels = case_when(clustering == 1L ~ "Part 3",
clustering == 2L ~ "Part 1",
clustering == 3L ~ "Part 2",
clustering == 4L ~ "Part 4")) %>%
select(CAMPUS, cluster_ratio_levels, campname, Campus_Group, Nursing_Ratio_levels) %>%
write_clip()
campus_Level_cnts_VAED_1819_clust %>%
mutate(cluster_ratio_levels = case_when(clustering == 1L ~ "Part 4",
clustering == 2L ~ "Part 1",
clustering == 3L ~ "Part 3",
clustering == 4L ~ "Part 2")) %>%
select(CAMPUS, cluster_ratio_levels, campname, Campus_Group, Nursing_Ratio_levels) %>%
write_clip()
load("~/OneDrive - Department of Health and Human Services. Victoria/Nursing Ratio cluster modelling/Inpatient Mod/VAED MBS and ECCS datasets/Step_2_VAED_pu1819_1920_Filtered_Dt.RData")
dim(VAED_pu1819_1920)
length(unqiue(VAED_pu1819_1920$campname))
length(unique(VAED_pu1819_1920$campname))
attach(campus_Level_cnts_VAED_1819)
campus_Level_cnts_VAED_1819 %>%
select(emerg_Admissions, elective_Admissions, overnight_Episodes,  multiday_Episodes, ICUHRS_episodes, patient_Transfer_To_this_Campus, DRG_Type_intervention_Episodes, DRG_Type_medical_Episodes,
Transfer_patient_To_another_Campus, MBS_level_0_cnt:MBS_level_4_cnt, Inlier_Weight_4_level_1_cnt:Inlier_Weight_4_level_4_cnt, Cnt_admissions_In_top_MDC, Cnt_ardrg_More_2_esp) %>%
data.frame() %>%
as.matrix() -> VAED_var_Matrix
set.seed(2084)
mvpois_mix_model_optimal <- stepFlexmix(VAED_var_Matrix ~ 1,
k = 1:4,
nrep = 30,
model = FLXMCmvpois(),
control = list(iter.max = 10000, tolerance = 1e-10, classify = "r"))
# find the best fitted model according to the lowest BIC value
Optimal_Mod <- getModel(mvpois_mix_model_optimal, which = "BIC")
Optimal_Mod
set.seed(2085)
mvpois_mix_model_optimal <- stepFlexmix(VAED_var_Matrix ~ 1,
k = 1:4,
nrep = 30,
model = FLXMCmvpois(),
control = list(iter.max = 10000, tolerance = 1e-10, classify = "r"))
# find the best fitted model according to the lowest BIC value
Optimal_Mod <- getModel(mvpois_mix_model_optimal, which = "BIC")
Optimal_Mod
set.seed(2086)
mvpois_mix_model_optimal <- stepFlexmix(VAED_var_Matrix ~ 1,
k = 1:4,
nrep = 30,
model = FLXMCmvpois(),
control = list(iter.max = 10000, tolerance = 1e-10, classify = "r"))
# find the best fitted model according to the lowest BIC value
Optimal_Mod <- getModel(mvpois_mix_model_optimal, which = "BIC")
Optimal_Mod
set.seed(2087)
mvpois_mix_model_optimal <- stepFlexmix(VAED_var_Matrix ~ 1,
k = 1:4,
nrep = 30,
model = FLXMCmvpois(),
control = list(iter.max = 10000, tolerance = 1e-10, classify = "r"))
# find the best fitted model according to the lowest BIC value
Optimal_Mod <- getModel(mvpois_mix_model_optimal, which = "BIC")
Optimal_Mod
campus_Level_cnts_VAED_1819 %>%
select(emerg_Admissions, elective_Admissions, overnight_Episodes,  multiday_Episodes, ICUHRS_episodes, patient_Transfer_To_this_Campus,
Transfer_patient_To_another_Campus, MBS_level_0_cnt:MBS_level_4_cnt, Inlier_Weight_4_level_1_cnt:Inlier_Weight_4_level_4_cnt, Cnt_admissions_In_top_MDC, Cnt_ardrg_More_2_esp) %>%
data.frame() %>%
as.matrix() -> VAED_var_Matrix
set.seed(2088)
mvpois_mix_model_optimal <- stepFlexmix(VAED_var_Matrix ~ 1,
k = 1:4,
nrep = 30,
model = FLXMCmvpois(),
control = list(iter.max = 10000, tolerance = 1e-10, classify = "r"))
# find the best fitted model according to the lowest BIC value
Optimal_Mod <- getModel(mvpois_mix_model_optimal, which = "BIC")
Optimal_Mod
set.seed(2089)
mvpois_mix_model_optimal <- stepFlexmix(VAED_var_Matrix ~ 1,
k = 1:4,
nrep = 30,
model = FLXMCmvpois(),
control = list(iter.max = 10000, tolerance = 1e-10, classify = "r"))
# find the best fitted model according to the lowest BIC value
Optimal_Mod <- getModel(mvpois_mix_model_optimal, which = "BIC")
Optimal_Mod
set.seed(2090)
mvpois_mix_model_optimal <- stepFlexmix(VAED_var_Matrix ~ 1,
k = 1:4,
nrep = 30,
model = FLXMCmvpois(),
control = list(iter.max = 10000, tolerance = 1e-10, classify = "r"))
# find the best fitted model according to the lowest BIC value
Optimal_Mod <- getModel(mvpois_mix_model_optimal, which = "BIC")
Optimal_Mod
campus_Level_cnts_VAED_1819 %>%
ungroup() %>%
mutate(clustering = clusters(Optimal_Mod)) -> campus_Level_cnts_VAED_1819_clust
##-- cluster vars usewd in baove mixture mod
campus_Level_cnts_VAED_1819_clust %>%
as.data.frame()  -> cluster_Vars
param <- data.frame(parameters(Optimal_Mod))
# Add the column with the type of crime
param <- param %>%
mutate(vars = colnames(VAED_var_Matrix))
# Plot the clusters with their lambdas
param %>%
gather(cluster, lambdas, -vars) %>%
ggplot(aes(x = vars, y = lambdas, fill = vars)) +
geom_bar(stat = "identity") +
facet_wrap(~ cluster) +
theme(axis.text.x = element_text(angle = 90, hjust = 1),
legend.position = "none")
campus_Level_cnts_VAED_1819_clust %>%
ungroup() %>%
as.data.frame() %>%
select( emerg_Admissions, ICUHRS_episodes, patient_Transfer_To_this_Campus, multiday_Episodes,
Transfer_patient_To_another_Campus, MBS_level_0_cnt:MBS_level_4_cnt, Inlier_Weight_8_level_1_cnt:Inlier_Weight_8_level_8_cnt, Cnt_admissions_In_top_MDC) -> numeric_data
row.names(numeric_data) <- campus_Level_cnts_VAED_1819_clust$Hosp_Short_Name
object = list(data = numeric_data, cluster = clusters(Optimal_Mod))
# visualise clusters
(P1 <- fviz_cluster(object, data = numeric_data,  geom = "text", main = "", ggtheme = theme_classic()))
campus_Level_cnts_VAED_1819_clust %>%
mutate(cluster_ratio_levels = case_when(clustering == 1L ~ "Part 3",
clustering == 2L ~ "Part 1",
clustering == 3L ~ "Part 2",
clustering == 4L ~ "Part 4")) %>%
select(cluster_ratio_levels, Nursing_Ratio_levels) %>%
table()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
Key_Forward_Mod
runApp()
Key_Forward_Mod
baseline_Prediction_dt_ID
baseline_Prediction_dt
load("/Users/angushewitt/Desktop/AFL App Dev/Apps/Data/baseline_Prediction_dt.Rdata") #baselimeprd dt - AFL stats last rec game
load("/Users/angushewitt/Desktop/AFL Datasets/Misc/meaningful_var_interactions_tab.RData") # rubik cube coefs
is(baseline_Prediction_dt$Career_Position)
table(baseline_Prediction_dt$Career_Position)
table(baseline_Prediction_dt$Career_Positions_Meaningful_GD_Roles)
runApp()
runApp()
runApp()
runApp()
runApp()
load("/Users/angushewitt/Desktop/AFL App Dev/Apps/Data/baseline_Prediction_dt.Rdata") #baselimeprd dt - AFL stats last rec game
load("/Users/angushewitt/Desktop/AFL Datasets/Misc/meaningful_var_interactions_tab.RData") # rubik cube coefs
meaningful_var_interactions_tab
View(meaningful_var_interactions_tab)
ranef(Key_Forward_Mod)
library(shiny); runApp('~/Desktop/R Coding Catelog/Shiny App/Shiny app.R')
